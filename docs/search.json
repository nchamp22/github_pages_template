[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Data Science Blog: Working with Data in Pandas Tutorial",
    "section": "",
    "text": "In this tutorial, you will learn how to import a dataset, filter the data, and create visualizations using Pandas to explore and analyze it. Specifically, we will work with a dataset containing U.S. cancer incidence counts (1999–2022), grouped by race, cancer site, age group, and sex."
  },
  {
    "objectID": "blog.html#overview",
    "href": "blog.html#overview",
    "title": "Data Science Blog",
    "section": "",
    "text": "Write a brief description of the project here."
  },
  {
    "objectID": "blog.html#details",
    "href": "blog.html#details",
    "title": "Data Science Blog",
    "section": "",
    "text": "What I did\nTools used\nResults"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to My Data Science Portfolio",
    "section": "",
    "text": "Welcome to my data science portfolio! This site shows my journey learning data science and analytics. Here you’ll find projects that demonstrate what I’ve learned and discovered.\n\n\nThis portfolio shows my work learning data science. Each project includes:\n\nMy code with documentation\nVisualizations I created\nWhat I learned and discovered\n\nI built this site using Quarto and host it on GitHub Pages.\n\n\n\n\nProgramming: Python, Pandas for data analysis\nVisualization: Creating charts with Matplotlib and Seaborn\nData Collection: Getting data from files, websites, and APIs\nAnalysis: Finding patterns and answering questions with data\n\n\n\n\n\n\n\nLearn how I explore datasets to find interesting patterns and answer questions.\n\n\n\nSee how I gather data from different sources and prepare it for analysis.\n\n\n\nSee how I tackle a data science project beginning to end.\n\n\n\nThanks for visiting! Feel free to explore my projects and see what I’m learning."
  },
  {
    "objectID": "index.html#about-this-portfolio",
    "href": "index.html#about-this-portfolio",
    "title": "Welcome to My Data Science Portfolio",
    "section": "",
    "text": "This portfolio shows my work learning data science. Each project includes:\n\nMy code with documentation\nVisualizations I created\nWhat I learned and discovered\n\nI built this site using Quarto and host it on GitHub Pages."
  },
  {
    "objectID": "index.html#skills-im-learning",
    "href": "index.html#skills-im-learning",
    "title": "Welcome to My Data Science Portfolio",
    "section": "",
    "text": "Programming: Python, Pandas for data analysis\nVisualization: Creating charts with Matplotlib and Seaborn\nData Collection: Getting data from files, websites, and APIs\nAnalysis: Finding patterns and answering questions with data"
  },
  {
    "objectID": "index.html#my-projects",
    "href": "index.html#my-projects",
    "title": "Welcome to My Data Science Portfolio",
    "section": "",
    "text": "Learn how I explore datasets to find interesting patterns and answer questions.\n\n\n\nSee how I gather data from different sources and prepare it for analysis.\n\n\n\nSee how I tackle a data science project beginning to end.\n\n\n\nThanks for visiting! Feel free to explore my projects and see what I’m learning."
  },
  {
    "objectID": "projects/final-project.html",
    "href": "projects/final-project.html",
    "title": "Final Project",
    "section": "",
    "text": "This is coming down the pipeline. Check again later.",
    "crumbs": [
      "Final Project"
    ]
  },
  {
    "objectID": "projects/data-acquisition.html",
    "href": "projects/data-acquisition.html",
    "title": "Data Acquisition Project",
    "section": "",
    "text": "This is coming down the pipeline. Check again later.",
    "crumbs": [
      "Data Acquisition Project"
    ]
  },
  {
    "objectID": "projects/eda.html",
    "href": "projects/eda.html",
    "title": "EDA Project",
    "section": "",
    "text": "This is coming down the pipeline. Check again later.",
    "crumbs": [
      "EDA Project"
    ]
  },
  {
    "objectID": "projects/index.html",
    "href": "projects/index.html",
    "title": "Projects Overview",
    "section": "",
    "text": "Description: Pick a dataset and explore it to discover insights and answer questions.\n\n\n\nDescription: Find an interesting data source, collect the data, and prepare it for analysis.\n\n\n\nDescription: A comprehensive project that shows off my data science skills.",
    "crumbs": [
      "Projects Overview"
    ]
  },
  {
    "objectID": "projects/index.html#all-projects",
    "href": "projects/index.html#all-projects",
    "title": "Projects Overview",
    "section": "",
    "text": "Description: Pick a dataset and explore it to discover insights and answer questions.\n\n\n\nDescription: Find an interesting data source, collect the data, and prepare it for analysis.\n\n\n\nDescription: A comprehensive project that shows off my data science skills.",
    "crumbs": [
      "Projects Overview"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "I am an Applied Statistics Major at Brigham Young University. I love using data to solve real problems."
  },
  {
    "objectID": "about.html#background",
    "href": "about.html#background",
    "title": "About Me",
    "section": "",
    "text": "I am an Applied Statistics Major at Brigham Young University. I love using data to solve real problems."
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About Me",
    "section": "Education",
    "text": "Education\n\nStatistics (BS): Applied Statistics & Analytics Emphasis - Brigham Young University, Sept. 2024 - PRESENT\nRelevant Coursework: Statistical Modeling, Single and Multivariate Calculus, Pobability and Inference, Python Programming, Excel."
  },
  {
    "objectID": "about.html#skills-interests",
    "href": "about.html#skills-interests",
    "title": "About Me",
    "section": "Skills & Interests",
    "text": "Skills & Interests\n\nTechnical Skills\n\nProgramming: Python, R\nData Analysis: Pandas, NumPy\nVisualization: Matplotlib, Seaborn\nMachine Learning: Scikit-learn\nTools: Jupyter Notebooks, Git/GitHub\n\n\n\nAreas of Interest\n\nHealthcare analytics\nFinance\nCrime data"
  },
  {
    "objectID": "about.html#goals",
    "href": "about.html#goals",
    "title": "About Me",
    "section": "Goals",
    "text": "Goals\n\nWork on projects related to finance and public health\nLearn more machine learning techniques"
  },
  {
    "objectID": "about.html#contact",
    "href": "about.html#contact",
    "title": "About Me",
    "section": "Contact",
    "text": "Contact\n\nEmail: nchamp@byu.du\nGitHub: github.com/nchamp22\nLinkedIn: linkedin.com/in/noah-champagne\n\n\nThis portfolio showcases my learning progress and projects completed during my data science studies."
  },
  {
    "objectID": "blog.html#working-with-data-in-pandas",
    "href": "blog.html#working-with-data-in-pandas",
    "title": "Data Science Blog:",
    "section": "",
    "text": "In this tutorial, readers will learn how to import a dataset, clean and filter the data, and create visualizations using Pandas to explore and analyze it. Specifically, they will work with a dataset containing US cancer incidence rates (1999–2022), grouped by race, cancer site, age group, and sex, but the Pandas techniques demonstrated can be applied to any dataset they choose."
  },
  {
    "objectID": "blog.html#introduction-to-the-data",
    "href": "blog.html#introduction-to-the-data",
    "title": "Data Science Blog: Working with Data in Pandas Tutorial",
    "section": "Introduction to the Data",
    "text": "Introduction to the Data\nAs mentioned in the blog introduction, we will be working with a dataset containing U.S. cancer incidence counts from 1999 to 2022.\nThe dataset includes the following variables:\n\nRace: American Indian or Alaska Native, Asian or Pacific Islander, Black or African American, White, and Other.\nCancer site: The location of the cancer, such as stomach, small intestine, tonsil, salivary gland, and others.\nAge: Grouped into 4-year intervals from &lt;1 in some cases to 85+ (e.g., 20–24, 25–29, etc.).\nRates: Calculated per 100,000 people.\n\nThe dataset contains 12,532 rows and represents a subset of all cancer data collected during this period.\n\nUnited States and Puerto Rico Cancer Statistics, 1999-2022 Incidence\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRace\nCode\nCancer Site\nSite Code\nAge Group\nAge Code\nSex\nSex Code\nCount\n\n\n\n\nAsian or Pacific Islander\nA-PI\nLung and Bronchus\n22030\n85+ years\n85\nFemale\nF\n5305\n\n\nAsian or Pacific Islander\nA-PI\nLung and Bronchus\n22030\n85+ years\n85\nMale\nM\n5773\n\n\nAsian or Pacific Islander\nA-PI\nTrachea, Mediastinum and Other Respiratory Organs\n22060\n1-4 years\n1-4\nFemale\nF\n16\n\n\nAsian or Pacific Islander\nA-PI\nTrachea, Mediastinum and Other Respiratory Organs\n22060\n15-19 years\n15-19\nMale\nM\n53"
  },
  {
    "objectID": "blog.html#loading-in-the-data",
    "href": "blog.html#loading-in-the-data",
    "title": "Data Science Blog: Working with Data in Pandas Tutorial",
    "section": "Loading in the Data",
    "text": "Loading in the Data\nNow that we understand what we are working with, we can load in the data. In Pandas, we can read in a CSV file with the following code (click on the dropdown arrow beside the word code to see the code and comments that explain how the code works):\nimport pandas as pd\n\ndf = pd.read_csv(\"cancer.csv\") ## this reads in the CSV\ndf.head() ## this shows the first five rows\n\n\nCode\nimport pandas as pd\n\ndf = pd.read_csv(\"cancer.csv\") ## this reads in the CSV\ndf.head() ## this shows the first five rows\n\n\n\n\n\n\n\n\n\nNotes\nRace\nRace Code\nCancer Sites\nCancer Sites Code\nAge Groups\nAge Groups Code\nSex\nSex Code\nCount\n\n\n\n\n0\nNaN\nAmerican Indian or Alaska Native\n1002-5\nAll Invasive Cancer Sites Combined\n0\n&lt; 1 year\n1\nFemale\nF\n123.0\n\n\n1\nNaN\nAmerican Indian or Alaska Native\n1002-5\nAll Invasive Cancer Sites Combined\n0\n&lt; 1 year\n1\nMale\nM\n139.0\n\n\n2\nNaN\nAmerican Indian or Alaska Native\n1002-5\nAll Invasive Cancer Sites Combined\n0\n1-4 years\n1-4\nFemale\nF\n378.0\n\n\n3\nNaN\nAmerican Indian or Alaska Native\n1002-5\nAll Invasive Cancer Sites Combined\n0\n1-4 years\n1-4\nMale\nM\n520.0\n\n\n4\nNaN\nAmerican Indian or Alaska Native\n1002-5\nAll Invasive Cancer Sites Combined\n0\n5-9 years\n5-9\nFemale\nF\n288.0"
  },
  {
    "objectID": "blog.html#cleaning-and-filtering-the-data",
    "href": "blog.html#cleaning-and-filtering-the-data",
    "title": "Data Science Blog: Working with Data in Pandas",
    "section": "Cleaning and Filtering the Data",
    "text": "Cleaning and Filtering the Data\nIn our cancer.csv file, some data is not relevant to my analysis. I am only interested in specific cancer types and known races, so I will exclude entries where the cancer type is “All Invasive Cancer Sites Combined” and where the race is “Other Races and Unknown Combined”. This allows me to focus solely on the cancers and races of interest."
  },
  {
    "objectID": "blog.html#filtering-the-data",
    "href": "blog.html#filtering-the-data",
    "title": "Data Science Blog: Working with Data in Pandas Tutorial",
    "section": "Filtering the Data",
    "text": "Filtering the Data\nSometimes, we might work with data that is not relevant to our analysis. For this data set, let’s say we are only interested in specific cancer types and known races, so we will exclude entries where the cancer type is “All Invasive Cancer Sites Combined” and where the race is “Other Races and Unknown combined”. This allows us to focus on the cancers and races of interest.\nAdditionally, the dataset contains a “Notes” column that does not contain any useful data, so we will remove it.\nNote that spelling is crucial in this step. In this dataset, “All Invasive Cancer Sites Combined” uses an uppercase “C” in “Combined,” whereas “Other Races and Unknown combined” uses a lowercase “c.”\nClick on the dropdown arrow beside the word codebelow to see the code and comments that exolain how the code works. You will need to do this for the rest of the tutorial:\n\n\nCode\nimport pandas as pd\n\ndf = pd.read_csv(\"cancer.csv\")\n\n# Filter the rows to exclude \"All Invasive Cancer Sites Combined\" and \"Other Races and Unknown combined\"\ndf_filtered = df[\n    (df['Cancer Sites'] != \"All Invasive Cancer Sites Combined\") &\n    (df['Race'] != \"Other Races and Unknown combined\")\n]\n\n# eliminate the Notes column using the .drop() method\ndf_filtered = df_filtered.drop(columns=['Notes'])\n\n# eliminate rows where all remaining values are NaN\ndf_filtered = df_filtered.dropna(how='all')\n\n# Display the filtered data\ndf_filtered\n\n\n\n\n\n\n\n\n\nRace\nRace Code\nCancer Sites\nCancer Sites Code\nAge Groups\nAge Groups Code\nSex\nSex Code\nCount\n\n\n\n\n38\nAmerican Indian or Alaska Native\n1002-5\nOral Cavity and Pharynx\n20010-20100\n20-24 years\n20-24\nFemale\nF\n16.0\n\n\n39\nAmerican Indian or Alaska Native\n1002-5\nOral Cavity and Pharynx\n20010-20100\n20-24 years\n20-24\nMale\nM\n19.0\n\n\n40\nAmerican Indian or Alaska Native\n1002-5\nOral Cavity and Pharynx\n20010-20100\n25-29 years\n25-29\nFemale\nF\n26.0\n\n\n41\nAmerican Indian or Alaska Native\n1002-5\nOral Cavity and Pharynx\n20010-20100\n25-29 years\n25-29\nMale\nM\n28.0\n\n\n42\nAmerican Indian or Alaska Native\n1002-5\nOral Cavity and Pharynx\n20010-20100\n30-34 years\n30-34\nFemale\nF\n32.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n10420\nWhite\n2106-3\nMale Breast, In Situ\nBreast-InSitu-Male\n65-69 years\n65-69\nMale\nM\n571.0\n\n\n10421\nWhite\n2106-3\nMale Breast, In Situ\nBreast-InSitu-Male\n70-74 years\n70-74\nMale\nM\n511.0\n\n\n10422\nWhite\n2106-3\nMale Breast, In Situ\nBreast-InSitu-Male\n75-79 years\n75-79\nMale\nM\n443.0\n\n\n10423\nWhite\n2106-3\nMale Breast, In Situ\nBreast-InSitu-Male\n80-84 years\n80-84\nMale\nM\n282.0\n\n\n10424\nWhite\n2106-3\nMale Breast, In Situ\nBreast-InSitu-Male\n85+ years\n85\nMale\nM\n167.0\n\n\n\n\n10273 rows × 9 columns"
  },
  {
    "objectID": "blog.html#plotting-with-pandas",
    "href": "blog.html#plotting-with-pandas",
    "title": "Data Science Blog: Working with Data in Pandas Tutorial",
    "section": "Plotting with Pandas",
    "text": "Plotting with Pandas\nNow that we have our data cleaned and ready, it is time to explore some of Pandas’ visualization tools. In this tutorial, we will specifically look at the following plots:\n\nBar charts\n\nStacked bar charts\n\nHeatmaps\n\nPie charts\n\nScatter plots\n\n\n1. Bar Charts\nBar charts are ideal for grouping cancer counts by variables such as cancer site or race. In Pandas, we can group data, sum the counts, and plot it. The kind parameter specifies the type of chart:\n\n\nCode\ndf_filtered.groupby('Cancer Sites')['Count'].sum().sort_values().plot(kind='bar')\n\n\n\n\n\n\n\n\n\nThis graph is hard to interpret because the dataset contains many cancer sites. To make it more readable, we can focus on a subset of cancer sites. I chose: Stomach, Lung and Bronchus, Soft Tissue including Heart, Female Breast, Prostate, Kidney and Renal Pelvis, Brain, and Leukemias.\nHere is the code for that, with accompanying comments. Notice how we create a specific list of sites we want to include and then use the .isin() method to filter for them when we generate the plot:\n\n\nCode\n# List of specific cancer sites\nselected_sites = [\n    \"Stomach\",\n    \"Lung and Bronchus\",\n    \"Soft Tissue including Heart\",\n    \"Female Breast\",\n    \"Prostate\",\n    \"Kidney and Renal Pelvis\",\n    \"Brain\",\n    \"Leukemias\"\n]\n\n# Plot only the selected sites using the  .isin() methid\ndf[df['Cancer Sites'].isin(selected_sites)].groupby('Cancer Sites')['Count'].sum().sort_values().plot(kind='bar')\n\n\n\n\n\n\n\n\n\nFrom this chart, we can easily see that certain cancers—such as Lung, Prostate, and Female Breast—are much more prevalent than others like Stomach or Brain cancer.\n\n\n2. Stacked Bar Charts\nWhen we want to visualize how cancer counts are distributed across different groups, such as sex, age, or race, stacked bar charts are useful.\nWhen we make stacked bar charts, we can make use of the .pivot_table() method. In pandas, a pivot table is similiar to it’s Excel counterpart in that it is a way to summarize and aggregate data in a table format by specifying which columns to use as rows, which to use as columns, and which values to aggregate.\n\n\nCode\n# List of specific cancer sites, expanded\nselected_sites = [\n    \"Stomach\",\n    \"Lung and Bronchus\",\n    \"Soft Tissue including Heart\",\n    \"Female Breast\",\n    \"Prostate\",\n    \"Kidney and Renal Pelvis\",\n    \"Brain\",\n    \"Leukemias\",\n    \"Oral Cavity and Pharynx\",\n    \"Salivary Gland\",\n    \"Esophagus\",\n    \"Liver and Intrahepatic Bile Duct\",\n    \"Melanoma of the Skin\",\n    \"Non-Hodgkin Lymphoma\",\n    \"Eye and Orbit\",\n    \"Endocrine System\",\n    \"Thyroid\"\n]\n\n# Filter for the selected cancer sites using .isin()\ndf_selected = df_filtered[df_filtered['Cancer Sites'].isin(selected_sites)]\n\n# Pivot table: Cancer Sites x Sex\ndf_pivot_sex = df_selected.pivot_table(\n    index='Cancer Sites', # we want cancer sites to be the rows\n    columns='Sex', ## we want sex to be the columns\n    values='Count', ## these are the values we want to aggregate\n    aggfunc='sum' ## we will aggregate the data by summing them\n)\n\n# Plot stacked bar chart\ndf_pivot_sex.plot(kind='bar', stacked=True)\n\n\n\n\n\n\n\n\n\nThis type of chart allows us to analyze patterns by sex. For example, Prostate cancer occurs only in biological males, and Female Breast cancer occurs only in biological females. For other cancers, such as Lung, the counts are similar for both sexes. Cancers of the endocrine system and thyroid appear more prevalent in males, whereas oral cavity and kidney cancers appear to be more common in females.\n\n\n3. Heatmaps\nHeatmaps are a powerful way to visualize patterns among two categorical variables. For this data, let’s use a heatmap to show which cancer sites have higher counts for different age groups. This makes it easy to spot trends at a glance.\nIn order to make heatmaps in Pandas, we will need to use the python visualization library matplotlib.\nFirst, let’s install matblotlib. In your terminal, run: pip install matplotlib.\nNext, run the following code to generate a heatmap:\n\n\nCode\nimport matplotlib.pyplot as plt\n\n# List of selected cancer sites to make the heatmap easier to read\nselected_sites = [\n    \"Stomach\",\n    \"Lung and Bronchus\",\n    \"Soft Tissue including Heart\",\n    \"Female Breast\",\n    \"Prostate\",\n    \"Kidney and Renal Pelvis\",\n    \"Brain\",\n    \"Leukemias\",\n    \"Oral Cavity and Pharynx\",\n    \"Salivary Gland\",\n    \"Esophagus\",\n    \"Liver and Intrahepatic Bile Duct\",\n    \"Melanoma of the Skin\",\n    \"Non-Hodgkin Lymphoma\",\n    \"Eye and Orbit\",\n    \"Endocrine System\",\n    \"Thyroid\"\n]\n\n# Filter the DataFrame to only look at the sites we are interested in using the isin() method\ndf_selected = df_filtered[df_filtered['Cancer Sites'].isin(selected_sites)]\n\n#Make a pivot table that makes it so that the data frame only contains the information we need.\ndf_pivot = df_selected.pivot_table(\n    index='Cancer Sites', \n    columns='Age Groups', \n    values='Count', \n    aggfunc='sum'\n)\n\n# Create the heatmap. Use the color red.\nplt.imshow(df_pivot, cmap='Reds')\n\n# Add x and y axis labels; rotate the x labels 90 degress so that they don't overlap one another. \nplt.xticks(range(len(df_pivot.columns)), df_pivot.columns, rotation=90)\nplt.yticks(range(len(df_pivot.index)), df_pivot.index)\n\n# Add a colorbar to show the scale\nplt.colorbar(label=\"Count\")\n\nplt.show()\n\n\n\n\n\n\n\n\n\nAs you can see, the dark red areas correspond to higher counts. For example, Female Breast cancer, Lung and Bronchus cancer, and Prostate cancer are most prevalent in the 50–85 year age range, with the highest number of Prostate cancer cases occurring in the 65–69 year group.\n\n\n4. Pie Charts\nPie charts are useful for showing how a total count is divided among categories, such as Male vs Female cases for a specific cancer type. They provide a quick visual sense of which group accounts for a larger proportion of cases.\nWith Pandas, you can create a pie chart directly using the plot(kind='pie') method — no need to call matplotlib functions.\nHere is some code that shows how Liver and Intrahepatic Bile Duct cancer is distributed across the sexes:\n\n\nCode\n# Filter for Liver and Intrahepatic Bile Duct cancer\ndf_liver = df_selected[df_selected['Cancer Sites'] == \"Liver and Intrahepatic Bile Duct\"]\n\n# Aggregate counts by sex\ncounts_by_sex = df_liver.groupby('Sex')['Count'].sum()\n\n# Create the pie chart using Pandas\ncounts_by_sex.plot(\n    kind='pie',        # specify a pie chart\n    autopct='%1.1f%%', # show percentages to one decimal point\n)\n\n\n\n\n\n\n\n\n\n\n\n5. Scatter Plots\nThe last graph we’ll look at is a scatter plot, which shows the relationship between two numbers by plotting each data point as a dot. Here, we’ll use it to see how Liver and Intrahepatic Bile Duct cancer counts are spread across different age groups: &lt;1 year, 1–4 years, …, 80–84 years, and 85+ years.\n\n\nCode\n# Make the age categories into numbers first\nages = {\n    \"&lt; 1 year\": 0,\n    \"1-4 years\": 2.5,\n    \"5-9 years\": 7,\n    \"10-14 years\": 12,\n    \"15-19 years\": 17,\n    \"20-24 years\": 22,\n    \"25-29 years\": 27,\n    \"30-34 years\": 32,\n    \"35-39 years\": 37,\n    \"40-44 years\": 42,\n    \"45-49 years\": 47,\n    \"50-54 years\": 52,\n    \"55-59 years\": 57,\n    \"60-64 years\": 62,\n    \"65-69 years\": 67,\n    \"70-74 years\": 72,\n    \"75-79 years\": 77,\n    \"80-84 years\": 82,\n    \"85+ years\": 90\n}\n\n## use on the data where the cancer site is liver cancer. Don't chage the original data, just take a copy. \ndf_liver = df_selected[df_selected['Cancer Sites'] == \"Liver and Intrahepatic Bile Duct\"].copy()\n\n## Replace each age range in the data frame with a numberic value that represents that age range.\ndf_liver['Age Groups'] = df_liver['Age Groups'].map(ages)\n\n# create the scatter plot with the following axes\ndf_liver.plot.scatter(x='Age Groups', y='Count')\n\n\n\n\n\n\n\n\n\nThis scatterplot shows cancer case counts by age. The vertical spread at each age reflects differences between demographic groups and cancer types, but the clear overall trend is that liver cancer incidence increases sharply with age.\n## Going Further with Graphing\nIn this tutorial, we covered how to plot data using pandas. When we introduced the heatmap, we mentioned the Python library matplotlib. You can explore the wide variety of plot types available in matplotlib here.\nAdditionally, there are many ways to enhance your graphs, such as changing colors, adjusting axes, and more.\nHere is an example of how we might do that with a pie chart. Click on the code arrow to view the changes we made:\n\n\nCode\nimport matplotlib.pyplot as plt\n\n# Filter for Liver and Intrahepatic Bile Duct cancer\ndf_liver = df_selected[df_selected['Cancer Sites'] == \"Liver and Intrahepatic Bile Duct\"]\n\n# Aggregate counts by sex\ncounts_by_sex = df_liver.groupby('Sex')['Count'].sum()\n\n# Create the pie chart and get the Axes object\nax = counts_by_sex.plot(\n    kind='pie',\n    autopct='%1.1f%%',\n    colors=['pink', 'lightskyblue'],\n    ylabel=''  # removes default y-axis label\n)\n\n# Set the styled title\nax.set_title(\n    \"Liver and Intrahepatic Bile Duct Cancer by Sex\",\n    fontsize=16,\n    fontweight='bold',\n    color='mediumorchid'\n)\n\n# Show the plot cleanly\nplt.show()"
  },
  {
    "objectID": "blog.html#plotting-with-pandas-1",
    "href": "blog.html#plotting-with-pandas-1",
    "title": "Data Science Blog: Working with Data in Pandas Tutorial",
    "section": "Plotting with Pandas",
    "text": "Plotting with Pandas\nNow that we have our data cleaned and ready, it is time to explore some of Pandas’ visualization tools. In this tutorial, we will specifically look at the following plots:\n\nBar charts\n\nStacked bar charts\n\nBox plots\n\nHeat maps\n\nPie charts\n\nScatter plots"
  },
  {
    "objectID": "blog.html#conclusion",
    "href": "blog.html#conclusion",
    "title": "Data Science Blog: Working with Data in Pandas Tutorial",
    "section": "Conclusion",
    "text": "Conclusion\nI hope this tutorial helped you understand how to use the Python library pandas to clean and filter a dataset, as well as how to use different types of plots to visualize and analyze the data.\nNow it’s your turn! Find a dataset and apply these techniques to it. You can explore great datasets on Data.gov or use your own data. If you want to learn more about pandas, the documentation can be found on this website.\n\n\n\nPyton Pandas Logo"
  },
  {
    "objectID": "blog.html#going-futher-with-graphing",
    "href": "blog.html#going-futher-with-graphing",
    "title": "Data Science Blog: Working with Data in Pandas Tutorial",
    "section": "Going Futher with Graphing",
    "text": "Going Futher with Graphing"
  }
]